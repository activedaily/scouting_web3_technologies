[role="pagenumrestart"]
[[intro_chapter]]
== intro
[%hardbreaks]

_New/old_ *technologies* for the _new/old_ web:

=== web3 == verifiable web
Web3 is umbrella term but main feature is cryptographically *_verifiability_* and *_traceability_*. One of the first _verifiable web_ projects is *_bitcoin_*, all transaction history explicitly is _traceable_ and _verifiable_ for everyone.

=== cryptography
Science of data and computation protection.

=== hash function
It's widely used for data verification and indexing in algorithms, protocols and data storage.

=== hash table
It's used as a quick data index, constant overage search time (_if no hash collisions_).

=== merkle tree (hash tree)
For data blocks (parts of a big one) verification and for proofs in algorithms and protocols.

=== distributed hash table (DHT)
It's used for nodes search in scalable distributed network for data access.

=== symmetric encryption
For data encryption and decryption by one key.

=== asymmetric encryption
For data encryption by one key and decryption by another key, this key pair are linked.

=== digital signature
It's  widely used for data authenticity verification.

=== post quantum
Protocol is _post quantum_ if it can't be hacked by future _quantum computers_ (_in theory_).

=== hash links
It's a consistency verification technique of hashes inclusion in data.

=== verifiable message or data
Message or data _digitally signed_ by sender and also includes _protocol_ specific verification data.


=== blockchain
It's growing data consistency verification _technology_ mainly used in _distributed protocols_ (chain of blocks with _hash links_ in each block to previous one, block data change is visible and provable failure).

=== direct acyclic graph (DAG)
Same as _blockchain_ but instead of chain of blocks direct acyclic graph is used, vertices of DAG are linked by _hashes_.

=== distributed protocol
It's a protocol for distributed network of nodes, all participants exchange digitally signed messages to achieve network goals (_state consensus_, _payment channel_ maintainance, etc. ).

=== distributed consensus protocol
It's a _distributed protocol_ to reach _consensus_ of some state in _distributed network_ of nodes without _trust_ to each other.

=== byzantine fault tolerance (BFT)
It's a tolerance of _distributed network_ (_distributed protocol_) to attacks from _malicious_ participants.

=== multi-pary computation (MPC)
Two or more parties computation protocols with some security requirenments (to keep private inputs secret for example).

=== permissionless protocol
Anyone can join distributed network with _permissionless protocol_ without any explicit permission.

=== permissioned protocol
Only _permissioned_ by some rules or 3d parties nodes are permissioned to join network and participate in protocol.

=== zero knowledge proof
One party (_prover_) proves to another party (_verifier_) a knowledge of _x_ without revealing _x_ (zero knowledge of _x_), only _proof_ of _something_ with no other information about that _something_. An example: you can prove that you older than 18 but without revealing your actual age.

=== smart contract
It's a _verifiable_ and _traceable_ digital contract's execution technology of some state transition in _trustless_ environment (for example balances movement in a _ledger_).

=== distributed ledger technology (DLT)
It's used to process _transactions_ and store _ledger_ data in distributed network of nodes without _trust_ to each other, each node stores same copy of data as other ones for _byzantine fault tolerance_.

=== L1 protocols
_L1_ is an alias for _distributed ledger_ (_on-chain_) protocols or similar.

=== L2 protocols
_L2_ is an alias for direct p2p (_off-chain_) protocols constructed on top of  direct _p2p_ _transactions_ and _L1_ protocols.


=== payment channel
It's a _p2p_ protocol (_L2_) for instant payments in any crypto, token or asset (3 steps: open, use, close channel).

=== state channel
Same as payment channel but for any state.

=== lightning network
It's an _L2 network_ (protocol) of _payment/state_ channels and hubs of channels.

=== distributed application (dapp)
It's an _app_ runs on top of distributed protocols (_L1/L2_).

=== tokenomic
It's a digital economy system with custom rules of tokens _emission_, _transfers_, _exchange_, etc., tokens can be _minted_ (_generated_) independently or linked to fiat money or other kind of assets.

=== cryptocurrency
It's a digital currency (with _crypto_ algorithms usage), usually implemented on top of _distributed ledger_ (_blockchain_) network.

=== stablecoin
Low volatility (stable) digital coin linked somehow to stable asset (fiat money, metal, etc. ).

=== defi
Decentralized finance, decentralized financial applications. It's a _dapp_ that can provide financial services alternatively to traditional financial systems.

=== fintech
Financial technologies applications and services. It's an _app_ that can be a financial frontend for endusers and replace whole bank.

=== self sovereign identity (SSI)
It's a concept supported by _w3c_ of independent _digital identity management_.

=== decentralized identifiers (DIDs)
Self generated and managed globally unique identifiers are used in decentralized networks (protocols).
https://www.w3.org/TR/did-core/[W3C Working Draft]


=== verifiable credentials
Self managed digital credentials that can be issued and verified by 3d parties.
https://www.w3.org/2017/vc/WG/[W3C Working Group]
